{"version":3,"sources":["transport/webusb.ts"],"names":[],"mappings":"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","file":"webusb.js","sourcesContent":["/*\n* DAPjs\n* Copyright Arm Limited 2018\n*\n* Permission is hereby granted, free of charge, to any person obtaining a copy\n* of this software and associated documentation files (the \"Software\"), to deal\n* in the Software without restriction, including without limitation the rights\n* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the Software is\n* furnished to do so, subject to the following conditions:\n*\n* The above copyright notice and this permission notice shall be included in all\n* copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n* SOFTWARE.\n*/\n\nimport { Transport } from \"./\";\n\n/**\n * @hidden\n */\nconst DEFAULT_CONFIGURATION = 1;\n/**\n * @hidden\n */\nconst DEFAULT_CLASS = 0xFF;\n\n/**\n * @hidden\n */\nconst GET_REPORT = 0x01;\n/**\n * @hidden\n */\nconst SET_REPORT = 0x09;\n/**\n * @hidden\n */\nconst OUT_REPORT = 0x200;\n/**\n * @hidden\n */\nconst IN_REPORT = 0x100;\n\n/**\n * WebUSB Transport class\n * https://wicg.github.io/webusb/\n */\nexport class WebUSB implements Transport {\n\n    private interfaceNumber: number;\n    public readonly packetSize = 64;\n\n    /**\n     * WebUSB constructor\n     * @param device WebUSB device to use\n     * @param interfaceClass Optional interface class to use (default: 0xFF)\n     * @param configuration Optional Configuration to use (default: 1)\n     */\n    constructor(private device: USBDevice, private interfaceClass = DEFAULT_CLASS, private configuration = DEFAULT_CONFIGURATION) {\n    }\n\n    private extendBuffer(data: BufferSource, packetSize: number): BufferSource {\n        function isView(source: ArrayBuffer | ArrayBufferView): source is ArrayBufferView {\n            return (source as ArrayBufferView).buffer !== undefined;\n        }\n\n        const arrayBuffer = isView(data) ? data.buffer : data;\n        const length = Math.min(arrayBuffer.byteLength, packetSize);\n\n        const result = new Uint8Array(length);\n        result.set(new Uint8Array(arrayBuffer));\n\n        return result;\n    }\n\n    /**\n     * Open device\n     * @returns Promise\n     */\n    public open(): Promise<void> {\n        return this.device.open()\n        .then(() => this.device.selectConfiguration(this.configuration))\n        .then(() => {\n            const interfaces = this.device.configuration.interfaces.filter(iface => {\n                return iface.alternates[0].interfaceClass === this.interfaceClass;\n            });\n\n            if (!interfaces.length) {\n                throw new Error(\"No valid interfaces found.\");\n            }\n\n            this.interfaceNumber = interfaces[0].interfaceNumber;\n            return this.device.claimInterface(this.interfaceNumber);\n        });\n    }\n\n    /**\n     * Close device\n     * @returns Promise\n     */\n    public close(): Promise<void> {\n        return this.device.close();\n    }\n\n    /**\n     * Read from device\n     * @returns Promise of DataView\n     */\n    public read(): Promise<DataView> {\n        return this.device.controlTransferIn(\n            {\n                requestType: \"class\",\n                recipient: \"interface\",\n                request: GET_REPORT,\n                value: IN_REPORT,\n                index: this.interfaceNumber\n            },\n            this.packetSize\n        )\n        .then(result => result.data);\n    }\n\n    /**\n     * Write to device\n     * @param data Data to write\n     * @returns Promise\n     */\n    public write(data: BufferSource): Promise<void> {\n        const buffer = this.extendBuffer(data, this.packetSize);\n\n        return this.device.controlTransferOut(\n            {\n                requestType: \"class\",\n                recipient: \"interface\",\n                request: SET_REPORT,\n                value: OUT_REPORT,\n                index: this.interfaceNumber\n            },\n            buffer\n        )\n        .then(() => undefined);\n    }\n}\n"],"sourceRoot":"../../src"}