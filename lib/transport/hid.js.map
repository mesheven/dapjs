{"version":3,"sources":["transport/hid.ts"],"names":[],"mappings":"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","file":"hid.js","sourcesContent":["/*\n* DAPjs\n* Copyright Arm Limited 2018\n*\n* Permission is hereby granted, free of charge, to any person obtaining a copy\n* of this software and associated documentation files (the \"Software\"), to deal\n* in the Software without restriction, including without limitation the rights\n* to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n* copies of the Software, and to permit persons to whom the Software is\n* furnished to do so, subject to the following conditions:\n*\n* The above copyright notice and this permission notice shall be included in all\n* copies or substantial portions of the Software.\n*\n* THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n* IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n* FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n* AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n* LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n* OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n* SOFTWARE.\n*/\n\nimport { platform } from \"os\";\nimport { HID as nodeHID, Device } from \"node-hid\";\nimport { Transport } from \"./\";\n\n/**\n * HID Transport class\n */\nexport class HID implements Transport {\n\n    private os: string = platform();\n    private path: string;\n    private device?: nodeHID;\n    public readonly packetSize = 64;\n\n    /**\n     * HID constructor\n     * @param path Path to HID device to use\n     */\n    constructor(deviceOrPath: Device | string) {\n        function isDevice(source: Device | string): source is Device {\n            return (source as Device).path !== undefined;\n        }\n\n        this.path = isDevice(deviceOrPath) ? deviceOrPath.path! : deviceOrPath;\n    }\n\n    /**\n     * Open device\n     * @returns Promise\n     */\n    public open(): Promise<void> {\n        return new Promise((resolve, reject) => {\n            if (!this.path.length) {\n                return reject(\"No path specified\");\n            }\n\n            try {\n                const hid = require(\"node-hid\");\n                this.device = new hid.HID(this.path);\n                resolve();\n            } catch (ex) {\n                reject(ex);\n            }\n        });\n    }\n\n    /**\n     * Close device\n     * @returns Promise\n     */\n    public close(): Promise<void> {\n        return new Promise((resolve, _reject) => {\n            if (this.device) {\n                this.device.close();\n            }\n\n            resolve();\n        });\n    }\n\n    /**\n     * Read from device\n     * @returns Promise of DataView\n     */\n    public read(): Promise<DataView> {\n        return new Promise((resolve, reject) => {\n            if (!this.device) return reject(\"No device opened\");\n            try {\n                this.device.read((error: string, data: number[]) => {\n                    if (error) {\n                        return reject(error);\n                    }\n\n                    const buffer = new Uint8Array(data).buffer;\n                    resolve(new DataView(buffer));\n                });\n            } catch (ex) {\n                reject(ex);\n            }\n        });\n    }\n\n    /**\n     * Write to device\n     * @param data Data to write\n     * @returns Promise\n     */\n    public write(data: BufferSource): Promise<void> {\n        return new Promise((resolve, reject) => {\n            if (!this.device) return reject(\"No device opened\");\n\n            function isView(source: ArrayBuffer | ArrayBufferView): source is ArrayBufferView {\n                return (source as ArrayBufferView).buffer !== undefined;\n            }\n\n            const arrayBuffer = isView(data) ? data.buffer : data;\n            const array = Array.prototype.slice.call(new Uint8Array(arrayBuffer));\n\n            // Pad to packet size\n            while (array.length < this.packetSize) array.push(0);\n\n            // Windows requires the prepend of an extra byte\n            // https://github.com/node-hid/node-hid/blob/master/README.md#prepend-byte-to-hid_write\n            if (this.os === \"win32\") {\n                array.unshift(0);  // prepend throwaway byte\n            }\n            try {\n                const bytesWritten = this.device.write(array);\n                if (bytesWritten !== array.length) return reject(\"Incorrect bytecount written\");\n\n                resolve();\n            } catch (ex) {\n                reject(ex);\n            }\n        });\n    }\n}\n"],"sourceRoot":"../../src"}